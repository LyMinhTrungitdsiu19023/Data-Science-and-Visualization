<DOCTYPE html>
    <html>

    <head>
        <style>
            body {
                background-color: #FFE4C4;

            }
        </style>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <script src="https://d3js.org/d3.v4.min.js"></script>
        <script type="text/javascript" src="https://d3js.org/d3.v4.min.js" charset="utf-8"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/d3-legend/2.25.6/d3-legend.min.js"></script>
        <script src="https://rawgit.com/susielu/d3-annotation/master/d3-annotation.min.js"></script>


    </head>

    <body>

        <div id="map"> </div>

        <div id="tooltip" class="hidden">
            <p><span id="type"></span></p>
            <p><span id="date"></span></p>
        </div>


        <title>Lab 7</title>

        <h1 style="color:blue;">
            <center>Lab 7 –D3.js – GeoMapping</center>
        </h1>
        <i>
            <h2>
                <center>Course: Data science and data visualization.</center>
            </h2>
        </i>
        <h4>Name: Lý Minh Trung</h4>
        <h4>ID: ITDSIU19023.</h4>
        <h4>“This is all my own work. I did not copy the code from any other source” <h4>

                <h4>-----------------------------------------------------------------------------------------------</h4>

                <style>
                    #map {
                        position: absolute;
                        top: 50px;
                        left: 100px;
                        width: 1000px;
                        height: 1000px;
                    }

                    svg {
                        float: left;
                    }

                    #tooltip {
                        position: absolute;
                        width: auto;
                        height: auto;
                        padding: 10px;
                        background-color: white;
                        -webkit-border-radius: 10px;
                        -moz-border-radius: 10px;
                        border-radius: 10px;
                        -webkit-box-shadow: 4px 4px 10px rgba(0, 0, 0, 0.4);
                        -moz-box-shadow: 4px 4px 10px rgba(0, 0, 0, 0.4);
                        box-shadow: 4px 4px 10px rgba(0, 0, 0, 0.4);
                        pointer-events: none;
                    }

                    #tooltip.hidden {
                        display: none;
                    }

                    #tooltip p {
                        margin: 0;
                        font-family: sans-serif;
                        font-size: 16px;
                        line-height: 20px;
                    }

                    div.tooltip1 {
                        position: absolute;
                        width: auto;
                        height: auto;
                        padding: 10px;
                        background-color: rgb(255, 255, 255);
                        -webkit-border-radius: 10px;
                        -moz-border-radius: 10px;
                        border-radius: 10px;
                        -webkit-box-shadow: 4px 4px 10px rgba(0, 0, 0, 0.4);
                        -moz-box-shadow: 4px 4px 10px rgba(0, 0, 0, 0.4);
                        box-shadow: 4px 4px 10px rgba(0, 0, 0, 0.4);
                        pointer-events: none;
                    }
                </style>

                <script>
                    var width = 1200;
                    var height = 1000;
                    var svg = d3.select("#map")
                        .append("svg")
                        .attr("width", width)
                        .attr("height", height);


                    var color = d3.scaleQuantize()
                        .range(["#3366FF"]);



                    var tooltip1 = d3.select("#map").append("div")
                        .attr("class", "tooltip1")
                        .style("opacity", 0);





                    d3.csv("https://raw.githubusercontent.com/LyMinhTrungitdsiu19023/Data-Science-and-Visualization/main/Lab/Lab7/coviddata2021_LMT.csv", function (data) {
                        color.domain([
                            d3.min(data, function (d) { return d.Infected }),

                        ]);


                        d3.json("https://raw.githubusercontent.com/TungTh/tungth.github.io/master/data/vn-provinces.json", function (json) {

                            for (var i = 0; i < data.length; i++) {

                                var dataState = data[i].code;

                                var dataValue = parseFloat(data[i].Infected);
                                var dataValue1 = parseFloat(data[i].Active);
                                var dataValue2 = parseFloat(data[i].Recovered);
                                var dataValue3 = parseFloat(data[i].Deaths);

                                for (var j = 0; j < json.features.length; j++) {
                                    var jsonState = json.features[j].properties.Ma;
                                    if (parseFloat(dataState) == parseFloat(jsonState)) {

                                        json.features[j].properties.Infected = dataValue;
                                        json.features[j].properties.Active = dataValue1;
                                        json.features[j].properties.Recovered = dataValue2;
                                        json.features[j].properties.Deaths = dataValue3;

                                        break;
                                    }
                                }
                            }




                            var center = d3.geoCentroid(json);

                            var scale = 50;
                            var offset = [width / 2, height / 2];

                            var path = d3.geoPath().projection(projection);

                            var bounds = d3.geoBounds(json);
                            var hscale = scale * width / (bounds[1][0] - bounds[0][0]);
                            var vscale = scale * height / (bounds[1][1] - bounds[0][1]);
                            var scale = (hscale < vscale) ? hscale : vscale;

                            var projection = d3.geoMercator().center(center).scale(scale).translate(offset);
                            path = path.projection(projection);


                            var zooming = function (d) {
                                console.log(d3.event.transform);

                                var offset = [d3.event.transform.x, d3.event.transform.y];

                                var newScale = d3.event.transform.k * 2000;

                                projection.translate(offset)
                                    .scale(newScale);

                                svg.selectAll("path")
                                    .attr("d", path);
                                svg.selectAll("circle")
                                    .attr("cx", function (d) {
                                        return projection([d.lon, d.lat])[0];
                                    })
                                    .attr("cy", function (d) {
                                        return projection([d.lon, d.lat])[1];
                                    });
                            }


                            var zoom = d3.zoom()
                                .on("zoom", zooming);



                            var map = svg.append("g")
                                .attr("id", "map")
                                .call(zoom)
                                .call(zoom.transform, d3.zoomIdentity
                                    .translate(width / 2, height / 2)
                                    .translate(-center[0], -center[1]));


                            map.append("rect")
                                .attr("x", 0)
                                .attr("y", 0)
                                .attr("width", width)
                                .attr("height", height)
                                .attr("opacity", 0);

                            var mouseover = function (d) {
                                d3.select(this).transition()
                                    .duration('200')
                                    .style("opacity", 1)
                                    .style("stroke", "white")
                                    .style("stroke-width", 3)

                                tooltip1.transition()
                                    .duration(100)
                                    .style("opacity", 1)

                                tooltip1.html(d.properties.Ten + "<br>" + "Confirmed Cases: " + d.properties.Infected + "<br>" +
                                    "Active Cases: " + d.properties.Active + "<br>" + "Recovered Cases: " + d.properties.Recovered + "<br>" + "Deaths: " + d.properties.Deaths)
                                    .style("left", (d3.event.pageX + 10) + "px")
                                    .style("top", (d3.event.pageY - 15) + "px")

                            };

                            var mouseout = function (d) {
                                d3.select(this).transition()
                                    .duration('200')
                                    .style("opacity", 0.9)
                                    .style("stroke", "white")
                                    .style("stroke-width", 0.3);



                                tooltip1.transition()
                                    .duration('100')
                                    .style("opacity", 0)
                                    .style("stroke", "white")
                                    .style("stroke-width", 0.3);

                            };

                            svg.selectAll("path")
                                .data(json.features)
                                .enter()
                                .append("path")
                                .attr("d", path)
                                .style("fill", function (d) {
                                    var value = d.properties.Infected;

                                    if (value) {
                                        return color(value);
                                    } else {
                                        return "#ccc";
                                    }
                                })
                                .style('stroke', 'white')
                                .style('stroke-width', 1.5)
                                .style("opacity", 0.8)
                                .on('mouseover', mouseover)
                                .on("mouseout", mouseout);
                        })
                    })
                </script>

    </body>

    </html>